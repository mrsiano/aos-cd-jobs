---
parameters:
  - name: BUILD_ID
    description: "Unique build number for each run."
  - name: REPO_OWNER
    description: "GitHub org that triggered the job."
  - name: REPO_NAME
    description: "GitHub repo that triggered the job."
  - name: PULL_BASE_REF
    description: "Ref name of the base branch."
  - name: PULL_BASE_SHA
    description: "Git SHA of the base branch."
  - name: PULL_REFS
    description: "All refs to test."
  - name: PULL_NUMBER
    description: "Pull request number."
  - name: PULL_PULL_SHA
    description: "Pull request head SHA."
  - name: JOB_SPEC
    description: "JSON form of job specification."
  - name: PROW_JOB_ID
    description: "The ID that prow sets on a Jenkins job in order to correlate it with a ProwJob."
provision:
  os: "rhel"
  stage: "base"
  provider: "aws"
sync:
  - "openshift,source-to-image=master"
actions:
  - type: "script"
    title: "build and install s2i"
    timeout: 300
    repository: "source-to-image"
    script: |-
      wget -q https://dl.google.com/go/go1.10.8.linux-amd64.tar.gz && sudo tar -C /usr/local -xzf go1.10.8.linux-amd64.tar.gz && sudo rm /bin/go* && sudo ln -s /usr/local/go/bin/go /usr/local/go/bin/godoc /usr/local/go/bin/gofmt /bin
      make build
      sudo cp /data/src/github.com/openshift/source-to-image/_output/local/bin/linux/amd64/s2i /usr/bin
      echo "Printing s2i version"
      s2i version
post_actions:
  - type: "host_script"
    title: "assemble GCS output"
    timeout: 300
    script: |-
      trap 'exit 0' EXIT
      mkdir -p gcs/artifacts gcs/artifacts/generated gcs/artifacts/journals gcs/artifacts/gathered
      result=$( python -c "import json; import urllib; print json.load(urllib.urlopen('${BUILD_URL}api/json'))['result']" )
      cat <<FINISHED >gcs/finished.json
      {
        "timestamp": $( date +%s ),
        "result": "${result}"
      }
      FINISHED
      cat "/var/lib/jenkins/jobs/${JOB_NAME}/builds/${BUILD_NUMBER}/log" > gcs/build-log.txt
      cp artifacts/generated/* gcs/artifacts/generated/
      cp artifacts/journals/* gcs/artifacts/journals/
      cp -r artifacts/gathered/* gcs/artifacts/

      scp -F ./.config/origin-ci-tool/inventory/.ssh_config -r "$( pwd )/gcs" openshiftdevel:/data
      scp -F ./.config/origin-ci-tool/inventory/.ssh_config /var/lib/jenkins/.config/gcloud/gcs-publisher-credentials.json openshiftdevel:/data/credentials.json
  - type: "script"
    title: "push the artifacts and metadata"
    timeout: 300
    script: |-
      trap 'exit 0' EXIT
      if [[ -n "${JOB_SPEC:-}" ]]; then
        JOB_SPEC="$( jq --compact-output ".buildid |= \"${BUILD_NUMBER}\"" <<<"${JOB_SPEC}" )"
        docker run -e JOB_SPEC="${JOB_SPEC}" -v "/data:/data:z" registry.svc.ci.openshift.org/ci/gcsupload:latest --dry-run=false --gcs-path=gs://origin-ci-test --gcs-credentials-file=/data/credentials.json --path-strategy=single --default-org=openshift --default-repo=origin /data/gcs/*
      fi