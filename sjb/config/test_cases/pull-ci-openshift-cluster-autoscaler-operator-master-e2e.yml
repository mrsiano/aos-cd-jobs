---
parent: 'common/test_cases/minimal.yml'
overrides:
  sync:
    - "openshift,cluster-api-provider-kubemark=master"
extensions:
  actions:
    - type: "host_script"
      title: "Upload the default AWS credentiasl"
      script: |-
         ssh -F ${WORKSPACE}/.config/origin-ci-tool/inventory/.ssh_config openshiftdevel "mkdir -p ~/.aws"
         scp -F ${WORKSPACE}/.config/origin-ci-tool/inventory/.ssh_config ~/.aws/credentials openshiftdevel:~/.aws
         ssh -F ${WORKSPACE}/.config/origin-ci-tool/inventory/.ssh_config openshiftdevel "mkdir -p ~/.ssh"
         scp -F ${WORKSPACE}/.config/origin-ci-tool/inventory/.ssh_config /var/lib/jenkins/.ssh/devenv.pem openshiftdevel:~/.ssh/devenv.pem
    - type: "script"
      title: "Install minikube"
      script: |-
        # Install minikube
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.30.0/minikube-linux-amd64
        chmod +x minikube
        sudo mv minikube /usr/bin/
        # Install kubectl
        curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.10.0/bin/linux/amd64/kubectl
        chmod +x kubectl
        sudo mv kubectl /usr/bin/
        # Install packages
        sudo yum install -y ebtables
        #
        VERSION="v1.13.0"
        wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz
        sudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/bin
        rm -f crictl-$VERSION-linux-amd64.tar.gz
    - type: "script"
      title: "Deploy kubernetes"
      script: |-
        sudo setenforce 0
        # https://github.com/kubernetes/minikube/blob/master/docs/configuring_kubernetes.md
        sudo minikube start --vm-driver=none --extra-config=kubelet.cgroup-driver=systemd --kubernetes-version v1.11.3 --v 5
    - type: "script"
      title: "Build the machine controller"
      script: |-
        export GOPATH=/data
        cd $GOPATH/src/github.com/openshift/cluster-autoscaler-operator
        go get -u github.com/openshift/imagebuilder/cmd/imagebuilder
        sudo mv /data/bin/imagebuilder /usr/bin
        export NO_DOCKER=1
        sudo -E make images IMAGE="docker.io/openshift/origin-cluster-autoscaler-operator" VERSION="v4.0"
    - type: "script"
      title: "Deploy kubemark actuator stack"
      script: |-
        export GOPATH=/data
        cd $GOPATH/src/github.com/openshift/cluster-api-provider-kubemark/
        curl -s https://api.github.com/repos/kubernetes-sigs/kustomize/releases/latest |\
          grep browser_download |\
          grep linux |\
          cut -d '"' -f 4 |\
          xargs curl -O -L
        chmod u+x kustomize_*_linux_amd64
        sudo mv kustomize_*_linux_amd64 /usr/bin/kustomize
        cd config
        # set the nodelink-controller image to the latest
        sed -i "/NODELINK_CONTROLLER_IMAGE/c\        image: $(docker run registry.svc.ci.openshift.org/openshift/origin-release:v4.0 image machine-api-operator)" clusterapi-manager-controllers-patch.yaml
        kustomize build | sudo kubectl apply --validate=false -f -

        sudo cp /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt
    - type: "script"
      title: "Deploy cluster autoscaler operator"
      script: |-
        export GOPATH=/data
        cd $GOPATH/src/github.com/openshift/cluster-autoscaler-operator/
        # deploy expected cluster and machineset objects
        sudo kubectl apply -f test/resources/cluster.yaml -f test/resources/machine-set.yaml
        kustomize build | sudo kubectl apply -f -
    - type: "script"
      title: "Run e2e tests"
      script: |-
        set +x
        export GOPATH=/data
        cd $GOPATH/src/github.com/openshift/cluster-autoscaler-operator/
        sudo make test-e2e NAMESPACE="kube-system" FOCUS="[k8s]"
  system_journals:
    - systemd-journald.service
