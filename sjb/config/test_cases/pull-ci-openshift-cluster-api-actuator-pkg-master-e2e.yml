---
parent: 'common/test_cases/minimal.yml'
overrides:
  sync:
    - "openshift,cluster-api-provider-kubemark=master"
    - "openshift,machine-api-operator=master"
    - "openshift,cluster-autoscaler-operator=master"
extensions:
  actions:
    - type: "host_script"
      title: "Upload the default AWS credentiasl"
      script: |-
         ssh -F ${WORKSPACE}/.config/origin-ci-tool/inventory/.ssh_config openshiftdevel "mkdir -p ~/.aws"
         scp -F ${WORKSPACE}/.config/origin-ci-tool/inventory/.ssh_config ~/.aws/credentials openshiftdevel:~/.aws
         ssh -F ${WORKSPACE}/.config/origin-ci-tool/inventory/.ssh_config openshiftdevel "mkdir -p ~/.ssh"
         scp -F ${WORKSPACE}/.config/origin-ci-tool/inventory/.ssh_config /var/lib/jenkins/.ssh/devenv.pem openshiftdevel:~/.ssh/devenv.pem
    - type: "script"
      title: "Install minikube"
      script: |-
        # Install minikube
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.30.0/minikube-linux-amd64
        chmod +x minikube
        sudo mv minikube /usr/bin/
        # Install kubectl
        curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.10.0/bin/linux/amd64/kubectl
        chmod +x kubectl
        sudo mv kubectl /usr/bin/
        # Install packages
        sudo yum install -y ebtables
        #
        VERSION="v1.13.0"
        wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz
        sudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/bin
        rm -f crictl-$VERSION-linux-amd64.tar.gz
    - type: "script"
      title: "Deploy kubernetes"
      script: |-
        sudo setenforce 0
        # https://github.com/kubernetes/minikube/blob/master/docs/configuring_kubernetes.md
        sudo minikube start --vm-driver=none --extra-config=kubelet.cgroup-driver=systemd --kubernetes-version v1.12.0 --v 5
        sudo cp /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt
    - type: "script"
      title: "Install kustomize"
      script: |-
        curl -s https://api.github.com/repos/kubernetes-sigs/kustomize/releases/latest |\
          grep browser_download |\
          grep linux |\
          cut -d '"' -f 4 |\
          xargs curl -O -L
        chmod u+x kustomize_*_linux_amd64
        sudo mv kustomize_*_linux_amd64 /usr/bin/kustomize
    - type: "script"
      title: "Deploy machine API operator"
      script: |-
        export GOPATH=/data
        cd $GOPATH/src/github.com/openshift/machine-api-operator/

        # TODO(jchaloup): once 220 gets merge, remove this
        git remote add origin https://github.com/openshift/machine-api-operator
        git fetch origin pull/220/head:220
        git checkout 220

        # deploy expected cluster and machineset objects
        sed -i "s/image: docker\.io\/openshift\/origin-machine-api-operator:v4\.0\.0/image: docker\.io\/gofed\/machine-api-operator:v0\.1\.0-181-g4b6bfc4/" install/0000_30_machine-api-operator_09_deployment.yaml
        sudo make deploy-kubemark
    - type: "script"
      title: "Deploy cluster autoscaler operator"
      script: |-
        export GOPATH=/data
        cd $GOPATH/src/github.com/openshift/cluster-autoscaler-operator/
        sed -i  "s/image: docker\.io\/openshift\/origin-cluster-autoscaler-operator:v4\.0/image: quay\.io\/openshift\/origin-cluster-autoscaler-operator:v4\.0/" install/0000_50_cluster-autoscaler-operator_04_deployment.yaml
        kustomize build | sudo kubectl apply -f -
    - type: "script"
      title: "Deploy cluster resources"
      script: |-
        export GOPATH=/data
        cd $GOPATH/src/github.com/openshift/cluster-api-provider-kubemark
        sudo kubectl apply -f examples/machine-set.yaml
    - type: "script"
      title: "Install go 1.10.1"
      script: |-
        mkdir -p ~/bin
        curl -sL -o ~/bin/gimme https://raw.githubusercontent.com/travis-ci/gimme/master/gimme
        chmod +x ~/bin/gimme
        gimme 1.10.1
        source ~/.gimme/envs/go1.10.1.env
        sudo cp /home/origin/.gimme/versions/go1.10.1.linux.amd64/bin/go /bin/go
    - type: "script"
      title: "Run e2e tests"
      script: |-
        set +x
        export GOPATH=/data
        cd $GOPATH/src/github.com/openshift/cluster-api-actuator-pkg/
        source ~/.gimme/envs/go1.10.1.env
        sudo -E make k8s-e2e
  system_journals:
    - systemd-journald.service
