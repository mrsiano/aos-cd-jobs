---
parent: 'common/test_cases/minimal.yml'
extensions:
  actions:
    - type: "host_script"
      title: "Upload the default AWS credentiasl"
      script: |-
         ssh -F ${WORKSPACE}/.config/origin-ci-tool/inventory/.ssh_config openshiftdevel "mkdir ~/.aws"
         scp -F ${WORKSPACE}/.config/origin-ci-tool/inventory/.ssh_config ~/.aws/credentials openshiftdevel:~/.aws
    - type: "script"
      title: "Install minikube"
      script: |-
        # Install minikube
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.30.0/minikube-linux-amd64
        chmod +x minikube
        sudo mv minikube /usr/bin/
        # Install kubectl
        curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.10.0/bin/linux/amd64/kubectl
        chmod +x kubectl
        sudo mv kubectl /usr/bin/
    - type: "script"
      title: "Deploy kubernetes"
      script: |-
        sudo setenforce 0
        # https://github.com/kubernetes/minikube/blob/master/docs/configuring_kubernetes.md
        sudo minikube start --vm-driver=none --extra-config=kubelet.cgroup-driver=systemd --kubernetes-version v1.12.0 --v 5
    - type: "script"
      title: "Build the machine api operator"
      script: |-
        # build the mao image
        export GOPATH=/data
        cd $GOPATH/src/github.com/openshift/machine-api-operator
        make build
        go get -u github.com/openshift/imagebuilder/cmd/imagebuilder
        sudo mv /data/bin/imagebuilder /usr/bin
        sudo imagebuilder -t "docker.io/machine-api-operator:$(git describe --always --abbrev=7)" .
    - type: "script"
      title: "Deploy and test the machine api operator"
      script: |-
        export GOPATH=/data
        cd $GOPATH/src/github.com/openshift/machine-api-operator
        make build-integration
        sudo pip install awscli
        curl https://releases.hashicorp.com/terraform/0.11.8/terraform_0.11.8_linux_amd64.zip -o terraform_0.11.8_linux_amd64.zip
        unzip terraform_0.11.8_linux_amd64.zip
        sudo cp ./terraform /usr/bin/.
        set +x
        echo "export AWS_ACCESS_KEY_ID=$(aws configure get aws_access_key_id)" >> envs
        echo "export AWS_SECRET_ACCESS_KEY=$(aws configure get aws_secret_access_key)" >> envs
        source envs
        set -x
        # copy the credentials under root since the ./bin/integration is run through sudo
        sudo cp -r /home/origin/.aws /root/.
        sudo -E ./bin/integration --kubeconfig /root/.kube/config --mao-image machine-api-operator:$(git describe --always --abbrev=7) --cluster-id mao-${BUILD_NUMBER}-pr-${PULL_NUMBER}
  system_journals:
    - systemd-journald.service
overrides:
  post_actions:
    - type: "host_script"
      title: "assemble GCS output"
      timeout: 300
      script: |-
        trap 'exit 0' EXIT
        mkdir -p gcs/artifacts gcs/artifacts/generated gcs/artifacts/journals gcs/artifacts/gathered
        result=$( python -c "import json; import urllib; print json.load(urllib.urlopen('${BUILD_URL}api/json'))['result']" )
        cat <<FINISHED >gcs/finished.json
        {
          "timestamp": $( date +%s ),
          "result": "${result}"
        }
        FINISHED
        cat "/var/lib/jenkins/jobs/${JOB_NAME}/builds/${BUILD_NUMBER}/log" > gcs/build-log.txt
        cp artifacts/generated/* gcs/artifacts/generated/
        cp artifacts/journals/* gcs/artifacts/journals/

        scp -F ./.config/origin-ci-tool/inventory/.ssh_config -r "$( pwd )/gcs" openshiftdevel:/data
        scp -F ./.config/origin-ci-tool/inventory/.ssh_config /var/lib/jenkins/.config/gcloud/gcs-publisher-credentials.json openshiftdevel:/data/credentials.json
    - type: "script"
      title: "push the artifacts and metadata"
      timeout: 300
      script: |-
        trap 'exit 0' EXIT
        if [[ -n "${JOB_SPEC:-}" ]]; then
          JOB_SPEC="$( jq --compact-output ".buildid |= \"${BUILD_NUMBER}\"" <<<"${JOB_SPEC}" )"
          docker run -e JOB_SPEC="${JOB_SPEC}" -v "/data:/data:z" registry.svc.ci.openshift.org/ci/gcsupload:latest --dry-run=false --gcs-path=gs://origin-ci-test --gcs-credentials-file=/data/credentials.json --path-strategy=single --default-org=openshift --default-repo=origin /data/gcs/*
        fi
